apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mocktrics-exporter
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: mocktrics-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mocktrics-exporter
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        {{- range $label := .Values.deployment.podLabels }}
        {{toYaml $label | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}
        {{- range $annotation := .Values.deployment.podAnnotations }}
        {{toYaml $annotation | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.deployment.image.name }}:{{ default .Chart.AppVersion .Values.deployment.image.tag }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
        - --config-file
        - /opt/mocktrics-exporter/config.yaml
        {{- if .Values.persistence.enabled }}
        - --persistence_path
        - /opt/mocktrics-exporter/storage.db
        {{- end }}
        ports:
        - name: http-api
          containerPort: 8080
          protocol: TCP
        - name: http-metrics
          containerPort: 8000
          protocol: TCP
        {{- with .Values.deployment.livenessProbe }}
        {{- if .enabled }}
        livenessProbe:
          httpGet:
            path: {{ default "/healthz" .path }}
            port: {{ default 8080 .port }}
            scheme: {{ default "HTTP" .scheme }}
          initialDelaySeconds: {{ default 5 .initialDelaySeconds }}
          periodSeconds: {{ default 10 .periodSeconds }}
          timeoutSeconds: {{ default 2 .timeoutSeconds }}
          failureThreshold: {{ default 3 .failureThreshold }}
          successThreshold: {{ default 1 .successThreshold }}
        {{- end }}
        {{- end }}
        {{- with .Values.deployment.readinessProbe }}
        {{- if .enabled }}
        readinessProbe:
          httpGet:
            path: {{ default "/healthz" .path }}
            port: {{ default 8080 .port }}
            scheme: {{ default "HTTP" .scheme }}
          initialDelaySeconds: {{ default 2 .initialDelaySeconds }}
          periodSeconds: {{ default 10 .periodSeconds }}
          timeoutSeconds: {{ default 2 .timeoutSeconds }}
          failureThreshold: {{ default 3 .failureThreshold }}
          successThreshold: {{ default 1 .successThreshold }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /opt/mocktrics-exporter/config.yaml
          subPath: config
        {{- if .Values.persistence.enabled }}
        - name: database
          mountPath: /opt/mocktrics-exporter/
        {{- end }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
      {{- if and (hasKey .Values.deployment "tolerations") (gt (len .Values.deployment.tolerations) 0) }}
      tolerations:
      {{- toYaml .Values.deployment.tolerations | nindent 8 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}
      {{- if .Values.persistence.enabled }}
      - name: database
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}
      {{- end }}